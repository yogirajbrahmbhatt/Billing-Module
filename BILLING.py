# this is small project, that will be the part of my major project of "Billing and Stock Management Software"
# Made by - Yogiraj Brahmbhatt

#importing the required packages and libraries
from PyQt5 import QtCore, QtGui, QtWidgets
import datetime
from fpdf import FPDF
import sqlite3 as s
import os

#establishing the connection with specific table in database for all the data manipulation purpose
db = s.connect("./database/store.db") 
cdb = db.cursor()
cdb.execute("SELECT DISTINCT product_subcat FROM raw_inventory")
dd = cdb.fetchall()
#the fetched data from database might contain some characters, hence this is done to remove such character
bad_chars = [';', "'", ')', "(", ","]
# initiating the lists that will be used to store userinput at the temporary stage and for entering the values in database later as well
cat = [] #the category of items are stored here
cart = [] #all the entered item will be stored here
carttotal = [] #the quantity of each entered item in above list will be stored here in the same manner
price = [] #MEP for the each selected item is stored here
tpp = [] # the total price for any one product with respect to the number of items(i.e quantity) taken, is stored here
for i in range(len(dd)):
    nd = ''.join((filter(lambda i: i not in bad_chars, dd[i])))
    cat.append(nd)
    
DateTime = datetime.datetime.now()
class Ui_bill(object):
    #the main window User Interface is created here with all the necessary widgets and tools
    def setupUi(self, bill):
        bill.setObjectName("bill")
        bill.setFixedSize(769, 633)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/main.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        bill.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(bill)
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(280, 10, 251, 21))
        font = QtGui.QFont()
        font.setFamily("Segoe Print")
        font.setPointSize(16)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.line = QtWidgets.QFrame(self.centralwidget)
        self.line.setGeometry(QtCore.QRect(0, 30, 771, 16))
        self.line.setFrameShape(QtWidgets.QFrame.HLine)
        self.line.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.line.setObjectName("line")
        self.name = QtWidgets.QLabel(self.centralwidget)
        self.name.setGeometry(QtCore.QRect(10, 90, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name.setFont(font)
        self.name.setObjectName("name")
        self.contact = QtWidgets.QLabel(self.centralwidget)
        self.contact.setGeometry(QtCore.QRect(420, 90, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.contact.setFont(font)
        self.contact.setObjectName("contact")
        self.cname = QtWidgets.QLineEdit(self.centralwidget)
        self.cname.setGeometry(QtCore.QRect(150, 90, 261, 31))
        self.cname.setObjectName("cname")
        self.ccontact = QtWidgets.QLineEdit(self.centralwidget)
        self.ccontact.setGeometry(QtCore.QRect(590, 90, 141, 31))
        self.ccontact.setObjectName("ccontact")
        self.contact_2 = QtWidgets.QLabel(self.centralwidget)
        self.contact_2.setGeometry(QtCore.QRect(340, 50, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.contact_2.setFont(font)
        self.contact_2.setObjectName("contact_2")
        self.date = QtWidgets.QLineEdit(self.centralwidget)
        self.date.setGeometry(QtCore.QRect(390, 50, 111, 31))
        self.date.setObjectName("date")
        self.date.setText('%s/%s/%s' % (DateTime.day, DateTime.month, DateTime.year))
        self.contact_3 = QtWidgets.QLabel(self.centralwidget)
        self.contact_3.setGeometry(QtCore.QRect(520, 50, 41, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.contact_3.setFont(font)
        self.contact_3.setObjectName("contact_3")
        self.time = QtWidgets.QLineEdit(self.centralwidget)
        self.time.setGeometry(QtCore.QRect(570, 50, 91, 31))
        self.time.setObjectName("time")
        self.time.setText('%s:%s:%s' % (DateTime.hour, DateTime.minute, DateTime.second))
        self.time.setText('%s:%s:%s' % (DateTime.hour, DateTime.minute, DateTime.second))
        self.contact_4 = QtWidgets.QLabel(self.centralwidget)
        self.contact_4.setGeometry(QtCore.QRect(10, 50, 201, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.contact_4.setFont(font)
        self.contact_4.setObjectName("contact_4")
        self.billno = QtWidgets.QLineEdit(self.centralwidget)
        self.billno.setGeometry(QtCore.QRect(170, 50, 141, 31))
        self.billno.setObjectName("billno")
        self.name_2 = QtWidgets.QLabel(self.centralwidget)
        self.name_2.setGeometry(QtCore.QRect(10, 130, 151, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name_2.setFont(font)
        self.name_2.setObjectName("name_2")
        self.name_3 = QtWidgets.QLabel(self.centralwidget)
        self.name_3.setGeometry(QtCore.QRect(10, 170, 101, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name_3.setFont(font)
        self.name_3.setObjectName("name_3")
        self.name_4 = QtWidgets.QLabel(self.centralwidget)
        self.name_4.setGeometry(QtCore.QRect(10, 210, 181, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name_4.setFont(font)
        self.name_4.setObjectName("name_4")
        self.iqt = QtWidgets.QSpinBox(self.centralwidget)
        self.iqt.setGeometry(QtCore.QRect(150, 210, 71, 31))
        self.iqt.setMinimum(1)
        self.iqt.setMaximum(999999999)
        self.iqt.setObjectName("iqt")
        self.pushButton = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton.setGeometry(QtCore.QRect(640, 550, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Kozuka Mincho Pro B")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton.setFont(font)
        self.pushButton.setObjectName("pushButton")
        self.icategory = QtWidgets.QComboBox(self.centralwidget)
        self.icategory.setGeometry(QtCore.QRect(150, 130, 111, 31))
        self.icategory.setObjectName("icategory")
        for t in range(len(cat)):
            self.icategory.addItem(cat[t])
        self.icategory.activated.connect(self.pass_Net_Adap)
       
        self.iname = QtWidgets.QComboBox(self.centralwidget)
        self.iname.setGeometry(QtCore.QRect(150, 170, 181, 31))
        self.iname.setObjectName("iname")
        self.name_5 = QtWidgets.QLabel(self.centralwidget)
        self.name_5.setGeometry(QtCore.QRect(10, 340, 81, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name_5.setFont(font)
        self.name_5.setObjectName("name_5")
        self.remarks = QtWidgets.QPlainTextEdit(self.centralwidget)
        self.remarks.setGeometry(QtCore.QRect(100, 350, 231, 71))
        self.remarks.setObjectName("remarks")
        self.tnc = QtWidgets.QComboBox(self.centralwidget)
        self.tnc.setGeometry(QtCore.QRect(100, 430, 231, 31))
        self.tnc.setObjectName("tnc")
        self.tnc.addItem("NO Replace NO Refund")
        self.tnc.addItem("3 days replacement - no refund")
        self.tnc.addItem("3 days replace & refund")
        self.tnc.addItem("other")
        self.name_6 = QtWidgets.QLabel(self.centralwidget)
        self.name_6.setGeometry(QtCore.QRect(10, 430, 71, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name_6.setFont(font)
        self.name_6.setObjectName("name_6")
        self.name_7 = QtWidgets.QLabel(self.centralwidget)
        self.name_7.setGeometry(QtCore.QRect(10, 300, 161, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name_7.setFont(font)
        self.name_7.setObjectName("name_7")
        self.discount = QtWidgets.QComboBox(self.centralwidget)
        self.discount.setGeometry(QtCore.QRect(180, 300, 191, 31))
        self.discount.setObjectName("discount")
        self.discount.addItem("0")
        self.discount.addItem("5")
        self.discount.addItem("15")
        self.discount.addItem("30")
        self.discount.addItem("50")
        self.name_8 = QtWidgets.QLabel(self.centralwidget)
        self.name_8.setGeometry(QtCore.QRect(10, 480, 141, 31))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(12)
        self.name_8.setFont(font)
        self.name_8.setObjectName("name_8")
        self.issuedby = QtWidgets.QLineEdit(self.centralwidget)
        self.issuedby.setGeometry(QtCore.QRect(160, 480, 201, 31))
        self.issuedby.setObjectName("issuedby")
        self.addtocart = QtWidgets.QPushButton(self.centralwidget)
        self.addtocart.setGeometry(QtCore.QRect(120, 250, 131, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Caslon Pro Bold")
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.addtocart.setFont(font)
        self.addtocart.setFlat(False)
        self.addtocart.setObjectName("addtocart")
        self.addtocart.clicked.connect(self.add2cart)
        self.clear = QtWidgets.QPushButton(self.centralwidget)
        self.clear.setGeometry(QtCore.QRect(20, 250, 91, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Caslon Pro Bold")
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.clear.setFont(font)
        self.clear.setFlat(False)
        self.clear.setObjectName("clear")
        self.total = QtWidgets.QPushButton(self.centralwidget)
        self.total.setGeometry(QtCore.QRect(20, 540, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(16)
        self.total.setFont(font)
        self.total.setStyleSheet("color: rgb(170, 0, 0);\n"
"background-color: rgb(255, 255, 127);")
        self.total.setObjectName("total")
        self.total.clicked.connect(self.totall)
        self.generatebill = QtWidgets.QPushButton(self.centralwidget)
        self.generatebill.setGeometry(QtCore.QRect(180, 540, 201, 41))
        font = QtGui.QFont()
        font.setFamily("Rod")
        font.setPointSize(16)
        self.generatebill.setFont(font)
        self.generatebill.setStyleSheet("color: rgb(170, 0, 0);\n"
"background-color: rgb(255, 255, 127);")
        self.generatebill.setObjectName("generatebill")
        self.textEdit = QtWidgets.QTextEdit(self.centralwidget)
        self.textEdit.setGeometry(QtCore.QRect(390, 170, 361, 361))
        self.textEdit.setObjectName("textEdit")
        self.textEdit.setPlainText(" Item Name                                       Quantity                   Price\n_______________________________________________________\n")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(546, 140, 71, 21))
        font = QtGui.QFont()
        font.setFamily("Myriad Pro Cond")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.remove = QtWidgets.QPushButton(self.centralwidget)
        self.remove.setGeometry(QtCore.QRect(260, 250, 111, 31))
        font = QtGui.QFont()
        font.setFamily("Adobe Caslon Pro Bold")
        font.setPointSize(12)
        font.setBold(True)
        font.setUnderline(False)
        font.setWeight(75)
        self.remove.setFont(font)
        self.remove.setFlat(False)
        self.remove.setObjectName("remove")
        self.remove.clicked.connect(self.rem2cart)
        bill.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(bill)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 769, 21))
        self.menubar.setObjectName("menubar")
        bill.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(bill)
        self.statusbar.setObjectName("statusbar")
        bill.setStatusBar(self.statusbar)

        self.retranslateUi(bill)
        self.clear.clicked.connect(self.iname.clear)
        self.clear.clicked.connect(self.iqt.clear)
        self.pushButton.clicked.connect(self.billno.clear)
        self.pushButton.clicked.connect(self.cname.clear)
        self.pushButton.clicked.connect(self.ccontact.clear)
        self.pushButton.clicked.connect(self.iname.clear)
        self.pushButton.clicked.connect(self.iqt.clear)
        self.pushButton.clicked.connect(self.remarks.clear)
        self.pushButton.clicked.connect(self.issuedby.clear)
        self.pushButton.clicked.connect(self.textEdit.clear)
        QtCore.QMetaObject.connectSlotsByName(bill)
        self.generatebill.clicked.connect(self.menufunction)


    def retranslateUi(self, bill):
        _translate = QtCore.QCoreApplication.translate
        bill.setWindowTitle(_translate("bill", "BILLING MODULE"))
        self.label.setText(_translate("bill", "BILLING MODULE"))
        self.name.setText(_translate("bill", "CUSTOMER NAME"))
        self.contact.setText(_translate("bill", "CUSTOMER CONTACT"))
        self.contact_2.setText(_translate("bill", "DATE"))
        self.contact_3.setText(_translate("bill", "TIME"))
        self.contact_4.setText(_translate("bill", "INVOICE NUMBER"))
        self.name_2.setText(_translate("bill", "Item Category"))
        self.name_3.setText(_translate("bill", "Item Name"))
        self.name_4.setText(_translate("bill", "Item Quantity"))
        self.pushButton.setText(_translate("bill", "RESET ALL"))
        self.name_5.setText(_translate("bill", "Remarks: "))
        self.name_6.setText(_translate("bill", "T & C *"))
        self.name_7.setText(_translate("bill", "Discount Percent: "))
        self.name_8.setText(_translate("bill", "ISSUED BY NAME / ID "))
        self.addtocart.setText(_translate("bill", "ADD TO CART"))
        self.clear.setText(_translate("bill", "CLEAR"))
        self.total.setText(_translate("bill", "TOTAL"))
        self.generatebill.setText(_translate("bill", "GENERATE BILL"))
        self.label_2.setText(_translate("bill", "CART"))
        self.remove.setText(_translate("bill", "REMOVE"))

    #for displaying the respective items, according to the selected category of item    
    def pass_Net_Adap(self):
        self.iname.clear()
        itemname = str(self.icategory.currentText())
        query = str("SELECT product_name FROM raw_inventory WHERE product_subcat = '"+itemname+"';")
        cdb.execute(query)
        ed = cdb.fetchall()
        bad_chars = [';', "'", ')', "(", ","]
        inam = []
        for u in range(len(ed)):
            nd = ''.join((filter(lambda i: i not in bad_chars, ed[u])))
            inam.append(nd)
        self.iname.setObjectName("iname")
        for y in range(len(inam)):
            self.iname.addItem(inam[y])
        str(self.iname.currentText())        

    #for adding any item in our cart on the press of "ADD TO CART"        
    def add2cart(self):
        tempa = str(self.iname.currentText())
        tempb = int(self.iqt.value())
        qry = str('SELECT mrp FROM raw_inventory WHERE product_name = "'+tempa+'";')
        cdb.execute(qry)
        fd = cdb.fetchall()
        a = cart.append(tempa)
        b = carttotal.append(tempb)
        c = price.append(fd[0][0])
        d = tpp.append(fd[0][0]*tempb)
        
        qw = str(tempa)
        wq = str(tempb)
        qqw = str(fd[0][0]*tempb)
        self.textEdit.append(qw+"                 "+wq+"                 "+qqw)

    #for popping out the lastly add item out on the press of "REMOVE"    
    def rem2cart(self):
        cart.pop(-1)
        carttotal.pop(-1)
        price.pop(-1)
        tpp.pop(-1)
        self.textEdit.undo()

    #for  totalling the entire cart's items on the press of "TOTAL"     
    def totall(self):
        r = sum(tpp)
        r = str(r)
        self.textEdit.append("_______________________________________________________\n")
        self.textEdit.append("TOTAL = "+r)
        disc = float(self.discount.currentText())
        fp = float((float(r)*disc)/100)
        r = float(r)
        fpp = r - fp
        fp = str(fp)
        fpp = str(fpp)
        disc = str(disc)
        self.textEdit.append("Discount/Scheme allowance given: "+disc+" %")
        r = str(r)
        self.textEdit.append(r+"-"+fp)
        self.textEdit.append("----------------------------------------------------------------------------")
        self.textEdit.append("THE AMOUNT TO PAY: "+fpp+"  Ruppees")
        self.textEdit.append("----------------------------------------------------------------------------\n")

       
        
    #for taking all the inputs and inserting it into the database, as well as to generate the printable bill    
    def menufunction(self, action):
        v = self.billno.text() #its primary key, so must be unique always
        v = str(v)
        v1 = self.date.text()
        v1 = str(v1)
        v2 = self.time.text()
        v3 = self.cname.text()
        v4 = self.ccontact.text()
        v5 = str(self.icategory.currentText())
        v6 = str(self.iname.currentText())
        v7 = int(self.iqt.value())
        v8 = str(self.discount.currentText())
        v9 = self.remarks.toPlainText()
        v10 = str(self.tnc.currentText())
        v11 = self.issuedby.text()

        r = sum(tpp)
        fp = ((r*float(v8))/100)
        fpp = r - fp
        v12 = float(fpp)
    
        rv = v1+'/'+v
        self.billno.setText(str(rv))
        
        foo = str(cart)
        fo = str(carttotal)
        ifi = str(price)

        cdb.execute("insert into bill(bill_no,date, time, customer_name, customer_contact, item_category, item_name, quantity, discount, remarks, TnC, issued_by, prices, tpp) values (?,?,?,?,?,?,?,?,?,?,?,?,?,?);",(rv,v1,v2,v3,v4,v5,foo,fo,v8,v9,v10,v11,ifi,v12))
        db.commit()
        
        #for generating the pdf of bill
        pdf = FPDF(unit='mm', format='A4')
        pdf.add_page()
        pdf.set_font("Arial", size=17)
        pdf.cell(200, 10, txt="Bill Invoice  -  SToRE +", ln=1, align='C')
        pdf.line(10, 20, 199, 20)
        pdf.set_font("Arial", size=13)
        r = str(rv)
        s = str('Date | Time: ')
        tt = str("Invoice No: ")
        u = str(v3)
        uu = str(v11)
        d = str(v1)
        t = str(v2)
        total = sum(tpp)
        pdf.cell(200, 10, txt=tt+r+"                                          "+s+d+" | "+t, ln=2, align='L')
        pdf.cell(300, 10, txt="Customer Name: "+u+"                                        "+"Issued By: "+uu, ln=4, align='L')
        pdf.line(10, 40, 199, 40)
        pdf.cell(200, 10, txt="Sr.No                          Item                                         Quantity                   Price", ln=2, align='J')
        pdf.line(10, 50, 199, 50)
        c = 1
        for t in range(len(cart)):
            c = str(c)
            r = (cart[t])
            rr = (carttotal[t])
            rrr = (tpp[t])
            r = str(r)
            rr = str(rr)
            rrr = str(rrr)
            pdf.cell(200,10,txt=c+"      "+r+"                      "+rr+"              "+rrr,ln = 5,align='L')
            c = int(c)
            c+=1
        pdf.cell(200,10, txt="---------------------------------------------------------------------------------------------------------------------------", ln = 6, align='L')   
        total = str(total)
        pdf.cell(200,10,txt="TOTAL = "+total,ln=6,align='L')
        pdf.cell(200,10,txt="DISCOUNT given = "+v8+" percent",ln=7,align='L')
        fp =str(fp)
        fpp = str(fpp)
        pdf.cell(200,10,txt=total+" - "+fp+" = "+fpp,ln=8,align='L')
        pdf.cell(200,10, txt="---------------------------------------------------------------------------------------------------------------------------", ln = 9, align='L')
        pdf.cell(200,10,txt="THE TOTAL AMOUNT TO PAY:          "+fpp+" Ruppees only . . .",ln=8,align='L')
        pdf.cell(200,10, txt="**********************************************************************************************************", ln = 10, align='L')
        pdf.cell(200,10,txt=" ",ln=12,align='L')
        rmrk = str(v9)
        tc = str(v10)
        pdf.cell(200,10,txt="Remarks - "+rmrk,ln=13,align='L')
        pdf.cell(200,10,txt="TERMS & CONDITIONS - "+tc,ln=14,align='L')
        
        pdf.output("bill_invoice.pdf")
        cart.clear()
        carttotal.clear()
        price.clear()
        tpp.clear()
        os.system("bill_invoice.pdf")
   





if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    bill = QtWidgets.QMainWindow()
    ui = Ui_bill()
    ui.setupUi(bill)
    bill.show()
    sys.exit(app.exec_())
#other functionalities to be added soon
